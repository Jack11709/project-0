"use strict";$(function(){function e(){W?(j=$(".track1.player").index())>=21&&(S.play(),$(".feedback").addClass("hide"),k.addClass("player"),k.addClass("winner"),$(".controller").addClass("hide"),$(".playerOneWin").removeClass("hide"),$(".reset").removeClass("hide"),$(".resultBox").removeClass("hide"),$(".aiWin").addClass("hide")):W||(j=$(".track2.player").index())>=21&&(S.play(),$(".feedback").addClass("hide"),x.addClass("player"),x.addClass("winner"),$(".controller").addClass("hide"),$(".reset").removeClass("hide"),$(".resultBox").removeClass("hide"),A?A&&$(".aiWin").removeClass("hide"):$(".playerTwoWin").removeClass("hide"))}function a(){W?(s(),W=!1,_=$(".track2"),f.text("Player 2's Turn")):W||(s(),W=!0,_=$(".track1"),f.text("Player 1's Turn"))}function s(){W?(j=$(".track1.player").index(),T>0?(P.play(),l()):0===T&&(r(),T=2)):W||(j=$(".track2.player").index(),B>0?(g.play(),l()):0===B&&(r(),B=2))}function l(){A?A&&(P.play(),f.text("Player 1 get's moving!"),_.eq(j).removeClass("player"),_.eq(j+(Math.floor(3*Math.random())+1)).addClass("player"),e(),(j=$(".track1.player").index())<21&&i()):(_.eq(j).removeClass("player"),_.eq(j+(Math.floor(3*Math.random())+1)).addClass("player"),e())}function r(){A?A&&(M.play(),_.eq(j).removeClass("player"),_.eq(j+5).addClass("player"),e(),(j=$(".track1.player").index())<21&&i()):(_.eq(j).removeClass("player"),_.eq(j+5).addClass("player"),e())}function o(){A?A&&0===G&&(W=!0,_=$(".track1"),j=$(".track1.player").index(),f.text("Mecha Gary has been salted! Player 1 moves again!"),_.eq(j).removeClass("player"),_.eq(j+(Math.floor(3*Math.random())+1)).addClass("player"),G=2,e()):0===G?(G=2,W=!0,j=$(".track1.player").index(),f.text("Player 2 has been salted! Player 1 moves again!"),l()):0===O&&(O=2,f.text("Player 1 has been salted! Player 2 moves again!"),j=$(".track2.player").index(),l())}function n(){f.text("Mecha Gary has salted you, he moves again!"),q.play(),O=2,_.eq(j).removeClass("player"),_.eq(j+(Math.floor(3*Math.random())+1)).addClass("player"),setTimeout(function(){i()},750),W=!1,e(),W=!0}function t(){M.play(),_.eq(j).removeClass("player"),_.eq(j+5).addClass("player"),f.text("Mecha Gary has boosted!"),W=!1,B=2,e(),W=!0}function d(){g.play(),_.eq(j).removeClass("player"),_.eq(j+(Math.floor(3*Math.random())+1)).addClass("player"),f.text("Mecha Gary has made his move!"),W=!1,e(),W=!0}function i(){z=j,_=$(".track2"),j=$(".track2.player").index(),setTimeout(function(){z<=4?d():z>4&&z<15?(D=Math.floor(5*Math.random())+1,D<=2?d():D>2&&D<=4&&1===B?t():D>2&&D<=4&&2===T?d():5===D&&1===O?n():5===D&&2===O&&d()):z>14&&(D=Math.floor(5*Math.random())+1,D<=3&&1===B?t():D<=3&&2===B&&1===O?n():D<=3&&2===B&&2===G?d():D>3&&1===G?n():d())},1500)}function c(){A?A&&m.on("click",function(){console.log("1p move run"),_=$(".track1"),j=$(".track1.player").index(),l()}):m.on("click",function(){console.log("2p move run"),a()})}function y(){A?A&&C.on("click",function(){1===T?(console.log("1p boost run"),_=$(".track1"),j=$(".track1.player").index(),T=2,f.text("Player 1 uses boost!"),r()):2===T&&(w.play(),f.text("Player 1 has already used boost!"))}):C.on("click",function(){W?1===T?(M.play(),T=0,a()):2===T&&(w.play(),f.text("Player 1 boost already used!")):W||(1===B?(M.play(),B=0,a()):2===B&&(w.play(),f.text("Player 2 boost already used!")))})}function p(){A?A&&v.on("click",function(){1===G?(G=0,q.play(),o()):2===G&&(w.play(),f.text("Player 1 has already used Salt!"))}):v.on("click",function(){W?1===G?(q.play(),G=0,o()):2===G&&(w.play(),f.text("Player 1 has already used Salt!")):W||(1===O?(q.play(),O=0,o()):2===O&&(w.play(),f.text("Player 2 has already used Salt!")))})}var u=$(".startbtn2"),h=$(".startbtn1"),m=$(".move"),C=$(".boost"),v=$(".salt"),f=$(".turn"),k=$(".finish1"),x=$(".finish2"),b=$(".theme")[0];b.src="sounds/closing_theme.mp3";var M=$(".boostSound")[0];M.src="sounds/boost_sound.mp3";var q=$(".saltSound")[0];q.src="sounds/salt_sound.mp3";var P=$(".moveSound")[0];P.src="sounds/move_sound.mp3";var g=$(".moveSound2")[0];g.src="sounds/move_sound2.mp3";var w=$(".errorSound")[0];w.src="sounds/error_sound.mp3";var S=$(".winSound")[0];S.src="sounds/winning_sound.mp3";var _=$(".track1"),W=!0,T=1,B=1,G=1,O=1,j=null,z=null,A=!1,D=null;u.on("click",function(){$(".instructions").addClass("hide"),$(".board").removeClass("hide"),$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),c(),y(),p(),b.play()}),h.on("click",function(){A=!0,$(".instructions").addClass("hide"),$(".board").removeClass("hide"),$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),c(),y(),p(),f.text("Make your first move!"),b.play()}),A?A&&$(".reset").on("click",function(){$(".track1").removeClass("player winner"),$(".start1").addClass("player"),T=1,G=1,$(".track2").removeClass("player winner"),$(".start2").addClass("player"),B=1,O=1,z=null,$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),$(".resultBox").addClass("hide"),$(".playerOneWin").addClass("hide"),$(".aiWin").addClass("hide"),f.text("Player 1's time to shine!"),b.src="",b.src="sounds/closing_theme.mp3",b.play()}):$(".reset").on("click",function(){$(".track1").removeClass("player winner"),$(".start1").addClass("player"),T=1,G=1,$(".track2").removeClass("player winner"),$(".start2").addClass("player"),B=1,O=1,$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),$(".resultBox").addClass("hide"),$(".playerOneWin").addClass("hide"),$(".playerTwoWin").addClass("hide"),b.src="",b.src="sounds/closing_theme.mp3",b.play()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
