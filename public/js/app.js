"use strict";$(function(){function a(){y?(f=$(".track1.player").index(),console.log(f),f>=21&&(console.log("Player 1 wins!"),t.addClass("player"),d.addClass("hide"),o.addClass("hide"),i.addClass("hide"))):y||(f=$(".track2.player").index(),console.log(f),f>=21&&(console.log("Player 2 wins!"),c.addClass("player"),d.addClass("hide"),o.addClass("hide"),i.addClass("hide")))}function e(){y?(l(),y=!1,r=$(".track2"),i.text("Player 2's Turn")):y||(l(),y=!0,r=$(".track1"),i.text("Player 1's Turn"))}function l(){y?(f=$(".track1.player").index(),1===u?s():(u=2,n())):y||(f=$(".track2.player").index(),1===C?s():(C=2,n()))}function s(){r.eq(f).removeClass("player"),r.eq(f+(Math.floor(3*Math.random())+1)).addClass("player"),a()}function n(){r.eq(f).removeClass("player"),r.eq(f+5).addClass("player"),a()}var d=$(".move"),r=$(".track1"),o=$(".boost"),i=$(".turn"),t=$(".finish1"),c=$(".finish2"),y=!0,u=1,C=1,f=null;d.on("click",e),o.on("click",function(){y?1===u&&(u=0,e()):y||1===C&&(C=0,e())})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwiY2hlY2tXaW5uZXIiLCJwbGF5ZXJPbmVUdXJuIiwiaW5kZXgiLCJjb25zb2xlIiwibG9nIiwiJGZpbmlzaDEiLCJhZGRDbGFzcyIsIiRtb3ZlIiwiJHR1cm5UZXh0IiwiJGZpbmlzaDIiLCJkZXRlcm1pbmVUdXJuIiwibG9jYXRlR2FyeSIsIm1vdmVHYXJ5IiwiYm9vc3RHYXJ5IiwiUGxheWVyVHdvQm9vc3RSZW1haW5pbmciLCIkdHJhY2siLCJlcSIsInJlbW92ZUNsYXNzIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiJGJvb3N0IiwiUGxheWVyT25lQm9vc3RSZW1haW5pbmciLCJvbiJdLCJtYXBwaW5ncyI6IllBQUFBLEdBQUUsV0FlQSxRQUFTQyxLQURUQyxHQUNBQyxFQUFTRixFQUFBQSxrQkFBYUUsUUFDcEJDLFFBQUdGLElBQUFBLEdBQ0RDLEdBQVUsS0FDVkMsUUFBUUMsSUFBSUYsa0JBQ1pHLEVBQUdILFNBQVksVUFDYkMsRUFBQUEsU0FBWSxRQUNaRSxFQUFBQSxTQUFTQyxRQUNUQyxFQUFNRCxTQUFTLFVBRWZFLElBQ0ROLEVBQUFILEVBQUEsa0JBQUFHLFFBVEhDLFFBVU9DLElBQUlILEdBQ1RDLEdBQVUsS0FDVkMsUUFBUUMsSUFBSUYsa0JBQ1pPLEVBQUdQLFNBQVksVUFDYkMsRUFBQUEsU0FBWSxRQUNaTSxFQUFBQSxTQUFTSCxRQUNUQyxFQUFNRCxTQUFTLFVBUXJCLFFBQVNJLEtBRFhULEdBQ0VVLElBQ0VWLEdBQUEsRUFDRVUsRUFBQUEsRUFBQUEsV0FDQVYsRUFBQUEsS0FBQUEsb0JBQ1NGLElBQ1RTLElBSkZQLEdBS1dBLEVBQ1RVLEVBQUFBLEVBQUFBLFdBQ0FWLEVBQUFBLEtBQUFBLG9CQUlILFFBQUFVLEtBQ0hWLEdBQ0VDLEVBQVNTLEVBQUFBLGtCQUFZVCxRQUNGLElBQWRELEVBQ0RDLEtBRUVVLEVBQUFBLEVBREZDLE1BSUVBLElBQ0RYLEVBQUFILEVBQUEsa0JBQUFHLFFBQ3VCLElBUjFCWSxFQVNFWixLQUVFVSxFQUFBQSxFQURGQyxNQVVKLFFBQVNELEtBRFRHLEVBQUFDLEdBQUFkLEdBQUFlLFlBQUEsVUFDQUYsRUFBU0gsR0FBQUEsR0FBV00sS0FBQUMsTUFBQSxFQUFBRCxLQUFBRSxVQUFBLElBQUFkLFNBQUEsVUFDbEJTLElBTUYsUUFBU0YsS0FEWEUsRUFBQUMsR0FBQWQsR0FBQWUsWUFBQSxVQUNFRixFQUFTRixHQUFBQSxFQUFULEdBQXFCUCxTQUFBLFVBQ25CUyxJQW5GRixHQUFBUixHQUFNUixFQUFBLFNBQ05nQixFQUFBaEIsRUFBQSxXQUNNUSxFQUFVUixFQUFBLFVBQ1pnQixFQUFXaEIsRUFBQSxTQUNUc0IsRUFBV3RCLEVBQUEsWUFDWFMsRUFBWVQsRUFBRSxZQUVkVSxHQUFhLEVBQ25CYSxFQUFBLEVBQ0lyQixFQUFKLEVBQ0lxQixFQUFBQSxJQTRFSGYsR0FBQWdCLEdBQUEsUUFBQWIsR0FFREgsRUFBTWdCLEdBQUcsUUFBU2IsV0FHYlQsRUFEbUIsSUFBakJzQixJQUNGdEIsRUFBYyxFQUNmUyxLQUVFQSxHQUNELElBQUFJLElBSkhBLEVBSzBCLEVBQ3hCSiIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKCgpID0+IHtcbiAgLy8gTGlzdCBvZiB2YXJpYWJsZXMgbmVlZGVkIGZvciB0aGUgZ2FtZVxuICBjb25zdCAkbW92ZSA9ICQoJy5tb3ZlJyk7XG4gIGxldCAkdHJhY2sgPSAkKCcudHJhY2sxJyk7XG4gIGNvbnN0ICRib29zdCA9ICQoJy5ib29zdCcpO1xuICBjb25zdCAkdHVyblRleHQgPSAkKCcudHVybicpO1xuICBjb25zdCAkZmluaXNoMSA9ICQoJy5maW5pc2gxJyk7XG4gIGNvbnN0ICRmaW5pc2gyID0gJCgnLmZpbmlzaDInKTtcbiAgLy8gVmFyaWFibGVzIHRoYXQgdXBkYXRlcyBkdXJpbmcgdGhlIGdhbWUsIGJhc2VkIG9uIHR1cm4vYWJpbHRpZXMgdXNlZC5cbiAgbGV0IHBsYXllck9uZVR1cm4gPSB0cnVlO1xuICBsZXQgUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPSAxO1xuICBsZXQgUGxheWVyVHdvQm9vc3RSZW1haW5pbmcgPSAxO1xuICBsZXQgaW5kZXggPSBudWxsO1xuXG4gIC8vIGZ1bmN0aW9uIHRoYXQgY2hlY2tzIHRvIHNlZSBpZiBlaXRoZXIgcGxheWVyIGlzIGluIGEgd2lubmluZyBwb3NpdGlvbiwgcG9zdGlvbiBpcyBkZXRlcm1pbmVzIGlmIHRoZSBpbmRleCBvZiB0aGUgb2NjdXBpZWQgc3BhY2UgaXMgZXF1YWwgdG8gb3IgZ3JlYXRlciB0aGFuIDIxKHRoZSBmaW5pc2ggbGluZSksIHRoZXJlIGFyZSBoaWRkZW4gcnVuIG9mZiBib3hlcyB0aGF0IGFsc28gZXZhdWxhdGUgdGhlIHdpbm5lciBpZiB0aGUgZmluYWwgbW92ZSB3b3VsZCBvZiB0YWtlIHRoZW4gcGxheWVyIHBhc3NlZCBpbmRleCAyMS5cbiAgZnVuY3Rpb24gY2hlY2tXaW5uZXIoKXtcbiAgICBpZihwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGluZGV4ID0gJCgnLnRyYWNrMS5wbGF5ZXInKS5pbmRleCgpO1xuICAgICAgY29uc29sZS5sb2coaW5kZXgpO1xuICAgICAgaWYoaW5kZXggPj0gMjEpe1xuICAgICAgICBjb25zb2xlLmxvZygnUGxheWVyIDEgd2lucyEnKTtcbiAgICAgICAgJGZpbmlzaDEuYWRkQ2xhc3MoJ3BsYXllcicpO1xuICAgICAgICAkbW92ZS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAkYm9vc3QuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgJHR1cm5UZXh0LmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmKCFwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGluZGV4ID0gJCgnLnRyYWNrMi5wbGF5ZXInKS5pbmRleCgpO1xuICAgICAgY29uc29sZS5sb2coaW5kZXgpO1xuICAgICAgaWYoaW5kZXggPj0gMjEpe1xuICAgICAgICBjb25zb2xlLmxvZygnUGxheWVyIDIgd2lucyEnKTtcbiAgICAgICAgJGZpbmlzaDIuYWRkQ2xhc3MoJ3BsYXllcicpO1xuICAgICAgICAkbW92ZS5hZGRDbGFzcygnaGlkZScpO1xuICAgICAgICAkYm9vc3QuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAgICAgJHR1cm5UZXh0LmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbi8vIHRoaXMgZnVuY3Rpb24gZGV0ZXJtaW5lcyB3aG9zIHR1cm4gaXQgaXMgYW5kIHVwZGF0ZXMgdGhlIG9uIHNjcmVlbiBwb3JtcHQgYWNjb3JkaW5nbHksIGl0IGlzIGZpcmVkIGRpcmVjdGx5IGFmdGVyIHRoZSBjbGljayBldmVudCBvbiBtb3ZlLCBhbmQgaXQgZmlyZWQgaWYgYSBib29zdCBoYXBwZW5zIGFmdGVyIHVwZGF0aW5nIHRoZSBib29zdCBib29sZWFuLCBpdCB3b3JrcyBvbiB0aGUgb25lIHZhcmlhYmxlIHdoaWNoIGdldHMgdXBkYXRlZCBvZiBwbGF5ZXJPbmVUdXJuIGZyb20gdHJ1ZSB0byBmYWxzZS5cbiAgZnVuY3Rpb24gZGV0ZXJtaW5lVHVybigpe1xuICAgIGlmKHBsYXllck9uZVR1cm4pe1xuICAgICAgbG9jYXRlR2FyeSgpO1xuICAgICAgcGxheWVyT25lVHVybiA9IGZhbHNlO1xuICAgICAgJHRyYWNrID0gJCgnLnRyYWNrMicpO1xuICAgICAgJHR1cm5UZXh0LnRleHQoJ1BsYXllciAyXFwncyBUdXJuJyk7XG4gICAgfSBlbHNlIGlmKCFwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGxvY2F0ZUdhcnkoKTtcbiAgICAgIHBsYXllck9uZVR1cm4gPSB0cnVlO1xuICAgICAgJHRyYWNrID0gJCgnLnRyYWNrMScpO1xuICAgICAgJHR1cm5UZXh0LnRleHQoJ1BsYXllciAxXFwncyBUdXJuJyk7XG4gICAgfVxuICB9XG4vLyBUaGlzIGZ1bmN0aW9uIGxvY2F0ZXMgZ2FyeSBvbiB0aGUgYm9hcmQsIHRoZSBzZXBlcmF0ZSBwYXJ0cyBvZiB0aGUgaWYgZWxzZSBzdGF0ZW1lbnQgcnVuIGJhc2VkIG9udyBoaWNoIHBsYWNlcyB0dXJuIGl0IGlzLCBvbmNlIGRvaW5nIHNvIGl0IGZpcmVzIG9mZiB0aGUgbW92ZUdhcnkgZnVuY3Rpb24uXG4gIGZ1bmN0aW9uIGxvY2F0ZUdhcnkoKXtcbiAgICBpZihwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGluZGV4ID0gJCgnLnRyYWNrMS5wbGF5ZXInKS5pbmRleCgpO1xuICAgICAgaWYoUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPT09IDEpe1xuICAgICAgICBtb3ZlR2FyeSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPSAyO1xuICAgICAgICBib29zdEdhcnkoKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGluZGV4ID0gJCgnLnRyYWNrMi5wbGF5ZXInKS5pbmRleCgpO1xuICAgICAgaWYoUGxheWVyVHdvQm9vc3RSZW1haW5pbmcgPT09IDEpe1xuICAgICAgICBtb3ZlR2FyeSgpO1xuICAgICAgfWVsc2Uge1xuICAgICAgICBQbGF5ZXJUd29Cb29zdFJlbWFpbmluZyA9IDI7XG4gICAgICAgIGJvb3N0R2FyeSgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFRoaXMgZnVuY3Rpb24gbW92ZXMgZ2FyeSwgaXQgZmlyc3QgZGV0ZXJtaW5lcyBpZiBpdCBpcyBhIHJlZ3VsYXIgbW92ZSBvciBhIGJvb3N0IG1vdmUsIGlmIGl0IGlzIGEgcmVndWxhciBtb3ZlIGl0IG1vdmVzIHRoZSBjdXJyZW50IHBsYXllcnMgR2FyeSBiZXR3ZWVuIDEgYW5kIDMgaW5kZXggc3BhY2VzIGFsb25nLCBpZiBib29zdCBpcyB1c2VkIGl0IGdpdmVzIGEgZ3VhcmVudGVlZCA1IHNwYWNlIG1vdmUuXG4gIGZ1bmN0aW9uIG1vdmVHYXJ5KCkge1xuICAgICR0cmFjay5lcShpbmRleCkucmVtb3ZlQ2xhc3MoJ3BsYXllcicpO1xuICAgICR0cmFjay5lcShpbmRleCArIChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzKSArIDEgKSApLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICBjaGVja1dpbm5lcigpO1xuICB9XG5cbi8vIFRoaXMgZnVuY3Rpb24gZmlyZXMgb2ZmIGlmIHRoZSBib29zdCBidXR0b24gaXMgY2xpY2tlZC4gaXQgdXBkYXRlcyBlYWNoIHBsYXllcnMgYm9vc3RVc2VkIGJvb2xlYW4sIHRoZW4gcnVucyB0aGUgb3RoZXIgZnVuY3Rpb25zIGFzIG5vcm1hbC5cbiAgZnVuY3Rpb24gYm9vc3RHYXJ5KCkge1xuICAgICR0cmFjay5lcShpbmRleCkucmVtb3ZlQ2xhc3MoJ3BsYXllcicpO1xuICAgICR0cmFjay5lcShpbmRleCArIDUpLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICBjaGVja1dpbm5lcigpO1xuICB9XG4vLyB2YXJpb3VzIGV2ZW50IGxpc3RlbmVycyBiZWxvdy5cbiAgJG1vdmUub24oJ2NsaWNrJywgZGV0ZXJtaW5lVHVybik7XG5cbiAgJGJvb3N0Lm9uKCdjbGljaycsICgpID0+e1xuICAgIGlmKHBsYXllck9uZVR1cm4pe1xuICAgICAgaWYoUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPT09IDEpe1xuICAgICAgICBQbGF5ZXJPbmVCb29zdFJlbWFpbmluZyA9IDA7XG4gICAgICAgIGRldGVybWluZVR1cm4oKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGlmKFBsYXllclR3b0Jvb3N0UmVtYWluaW5nID09PSAxKXtcbiAgICAgICAgUGxheWVyVHdvQm9vc3RSZW1haW5pbmcgPSAwO1xuICAgICAgICBkZXRlcm1pbmVUdXJuKCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn0pO1xuIl19
