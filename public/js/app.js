"use strict";$(function(){function e(){v?(P=$(".track1.player").index(),console.log(P),P>=21&&($(".feedback").addClass("hide"),y.addClass("player"),y.addClass("winner"),$(".controller").addClass("hide"),$(".playerOneWin").removeClass("hide"),$(".reset").removeClass("hide"),$(".resultBox").removeClass("hide"))):v||(P=$(".track2.player").index(),console.log(P),P>=21&&($(".feedback").addClass("hide"),u.addClass("player"),u.addClass("winner"),$(".controller").addClass("hide"),$(".playerTwoWin").removeClass("hide"),$(".reset").removeClass("hide"),$(".resultBox").removeClass("hide")))}function a(){v?(s(),v=!1,m=$(".track2"),c.text("Player 2's Turn")):v||(s(),v=!0,m=$(".track1"),c.text("Player 1's Turn"))}function s(){v?(P=$(".track1.player").index(),k>0?l():0===k&&(r(),k=2)):v||(P=$(".track2.player").index(),f>0?l():0===f&&(r(),f=2))}function l(){m.eq(P).removeClass("player"),m.eq(P+(Math.floor(3*Math.random())+1)).addClass("player"),e()}function r(){m.eq(P).removeClass("player"),m.eq(P+5).addClass("player"),e()}function d(){0===x?(x=2,v=!0,P=$(".track1.player").index(),c.text("Player 2 has been salted! Player 1 moves again!"),l()):0===b&&(b=2,c.text("Player 1 has been salted! Player 2 moves again!"),P=$(".track2.player").index(),l())}var o=$(".start"),t=$(".move"),n=$(".boost"),i=$(".salt"),c=$(".turn"),y=$(".finish1"),u=$(".finish2"),C=$(".theme")[0];C.src="sounds/closing_theme.mp3";var h=$(".boostSound")[0];h.src="sounds/boost_sound.mp3";var p=$(".saltSound")[0];p.src="sounds/salt_sound.mp3";var m=$(".track1"),v=!0,k=1,f=1,x=1,b=1,P=null;t.on("click",a),n.on("click",function(){v?1===k?(h.play(),k=0,a()):2===k&&c.text("Player 1 boost already used!"):v||(1===f?(h.play(),f=0,a()):2===f&&c.text("Player 2 boost already used!"))}),i.on("click",function(){v?1===x?(p.play(),x=0,d()):2===x&&c.text("Player 1 has already used Salt!"):v||(1===b?(p.play(),b=0,d()):2===b&&c.text("Player 2 has already used Salt!"))}),o.on("click",function(){$(".instructions").addClass("hide"),$(".board").removeClass("hide"),$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),C.play()}),$(".reset").on("click",function(){$(".track1").removeClass("player winner"),$(".start1").addClass("player"),k=1,x=1,$(".track2").removeClass("player winner"),$(".start2").addClass("player"),f=1,b=1,$(".controller").removeClass("hide"),$(".feedback").removeClass("hide"),$(".resultBox").addClass("hide"),$(".playerOneWin").addClass("hide"),$(".playerTwoWin").addClass("hide")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyIkIiwiY2hlY2tXaW5uZXIiLCJwbGF5ZXJPbmVUdXJuIiwiaW5kZXgiLCJjb25zb2xlIiwiYWRkQ2xhc3MiLCIkZmluaXNoMSIsInJlbW92ZUNsYXNzIiwibG9nIiwiJGZpbmlzaDIiLCJkZXRlcm1pbmVUdXJuIiwibG9jYXRlR2FyeSIsIiR0dXJuVGV4dCIsIlBsYXllck9uZUJvb3N0UmVtYWluaW5nIiwibW92ZUdhcnkiLCJQbGF5ZXJUd29Cb29zdFJlbWFpbmluZyIsIiR0cmFjayIsImVxIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYm9vc3RHYXJ5Iiwic2FsdEdhcnkiLCJQbGF5ZXJPbmVTYWx0UmVtYWluaW5nIiwiUGxheWVyVHdvU2FsdFJlbWFpbmluZyIsIiRzdGFydCIsIiRtb3ZlIiwiJGJvb3N0IiwiJHNhbHQiLCIkYXVkaW9UaGVtZSIsInNyYyIsIiRib29zdFNvdW5kIiwiJHNhbHRTb3VuZCIsIm9uIiwicGxheSJdLCJtYXBwaW5ncyI6IllBQUFBLEdBQUUsV0F5QkEsUUFBU0MsS0FEVEMsR0FDQUMsRUFBU0YsRUFBQUEsa0JBQWFFLFFBQ3BCQyxRQUFHRixJQUFBQSxHQUNEQyxHQUFVLEtBQ1ZDLEVBQUFBLGFBQUFDLFNBQUEsUUFDQUMsRUFBR0gsU0FBWSxVQUNiSCxFQUFFSyxTQUFhQSxVQUNmQyxFQUFBQSxlQUFBRCxTQUFBLFFBQ0FDLEVBQUFBLGlCQUFrQkMsWUFBbEIsUUFDQVAsRUFBRSxVQUFBTyxZQUFlRixRQUNqQkwsRUFBRSxjQUFBTyxZQUFpQkEsVUFFakJMLElBQ0hDLEVBQUFILEVBQUEsa0JBQUFHLFFBWEhDLFFBWU9JLElBQUlOLEdBQ1RDLEdBQVUsS0FDVkMsRUFBQUEsYUFBQUMsU0FBQSxRQUNBSSxFQUFHTixTQUFZLFVBQ2JILEVBQUVLLFNBQWFBLFVBQ2ZJLEVBQUFBLGVBQUFKLFNBQUEsUUFDQUksRUFBQUEsaUJBQWtCRixZQUFsQixRQUNBUCxFQUFFLFVBQUFPLFlBQWVGLFFB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QSxRQUNBUyxFQUFBQSxhQUFBQSxZQUFBLFFBQ0F4QixFQUFFLGNBQUZLLFNBQWlCRSxRQUNqQlAsRUFBRSxpQkFBYU8sU0FBWSxRQUMzQlAsRUFBRSxpQkFBY0ssU0FBUyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKCgpID0+IHtcbiAgLy8gTGlzdCBvZiB2YXJpYWJsZXMgbmVlZGVkIGZvciB0aGUgZ2FtZVxuICBjb25zdCAkc3RhcnQgPSAkKCcuc3RhcnQnKTtcbiAgY29uc3QgJG1vdmUgPSAkKCcubW92ZScpO1xuICBjb25zdCAkYm9vc3QgPSAkKCcuYm9vc3QnKTtcbiAgY29uc3QgJHNhbHQgPSAkKCcuc2FsdCcpO1xuICBjb25zdCAkdHVyblRleHQgPSAkKCcudHVybicpO1xuICBjb25zdCAkZmluaXNoMSA9ICQoJy5maW5pc2gxJyk7XG4gIGNvbnN0ICRmaW5pc2gyID0gJCgnLmZpbmlzaDInKTtcbiAgY29uc3QgJGF1ZGlvVGhlbWUgPSAkKCcudGhlbWUnKVswXTtcbiAgJGF1ZGlvVGhlbWUuc3JjID0gJ3NvdW5kcy9jbG9zaW5nX3RoZW1lLm1wMyc7XG4gIGNvbnN0ICRib29zdFNvdW5kID0gJCgnLmJvb3N0U291bmQnKVswXTtcbiAgJGJvb3N0U291bmQuc3JjID0gJ3NvdW5kcy9ib29zdF9zb3VuZC5tcDMnO1xuICBjb25zdCAkc2FsdFNvdW5kID0gJCgnLnNhbHRTb3VuZCcpWzBdO1xuICAkc2FsdFNvdW5kLnNyYyA9ICdzb3VuZHMvc2FsdF9zb3VuZC5tcDMnO1xuICAvLyBWYXJpYWJsZXMgdGhhdCB1cGRhdGUgZHVyaW5nIHRoZSBnYW1lLCBiYXNlZCBvbiB0dXJuL2FiaWx0aWVzIHVzZWQuXG4gIGxldCAkdHJhY2sgPSAkKCcudHJhY2sxJyk7XG4gIGxldCBwbGF5ZXJPbmVUdXJuID0gdHJ1ZTtcbiAgbGV0IFBsYXllck9uZUJvb3N0UmVtYWluaW5nID0gMTtcbiAgbGV0IFBsYXllclR3b0Jvb3N0UmVtYWluaW5nID0gMTtcbiAgbGV0IFBsYXllck9uZVNhbHRSZW1haW5pbmcgPSAxO1xuICBsZXQgUGxheWVyVHdvU2FsdFJlbWFpbmluZyA9IDE7XG4gIGxldCBpbmRleCA9IG51bGw7XG5cbiAgLy8gZnVuY3Rpb24gdGhhdCBjaGVja3MgdG8gc2VlIGlmIGVpdGhlciBwbGF5ZXIgaXMgaW4gYSB3aW5uaW5nIHBvc2l0aW9uLCBwb3N0aW9uIGlzIGRldGVybWluZXMgaWYgdGhlIGluZGV4IG9mIHRoZSBvY2N1cGllZCBzcGFjZSBpcyBlcXVhbCB0byBvciBncmVhdGVyIHRoYW4gMjEodGhlIGZpbmlzaCBsaW5lKSwgdGhlcmUgYXJlIGhpZGRlbiBydW4gb2ZmIGJveGVzIHRoYXQgYWxzbyBldmF1bGF0ZSB0aGUgd2lubmVyIGlmIHRoZSBmaW5hbCBtb3ZlIHdvdWxkIG9mIHRha2UgdGhlbiBwbGF5ZXIgcGFzc2VkIGluZGV4IDIxLlxuICBmdW5jdGlvbiBjaGVja1dpbm5lcigpe1xuICAgIGlmKHBsYXllck9uZVR1cm4pe1xuICAgICAgaW5kZXggPSAkKCcudHJhY2sxLnBsYXllcicpLmluZGV4KCk7XG4gICAgICBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgICBpZihpbmRleCA+PSAyMSl7XG4gICAgICAgICQoJy5mZWVkYmFjaycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICRmaW5pc2gxLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICAgICAgJGZpbmlzaDEuYWRkQ2xhc3MoJ3dpbm5lcicpO1xuICAgICAgICAkKCcuY29udHJvbGxlcicpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICQoJy5wbGF5ZXJPbmVXaW4nKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAkKCcucmVzZXQnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAkKCcucmVzdWx0Qm94JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYoIXBsYXllck9uZVR1cm4pe1xuICAgICAgaW5kZXggPSAkKCcudHJhY2syLnBsYXllcicpLmluZGV4KCk7XG4gICAgICBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgICBpZihpbmRleCA+PSAyMSl7XG4gICAgICAgICQoJy5mZWVkYmFjaycpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICRmaW5pc2gyLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICAgICAgJGZpbmlzaDIuYWRkQ2xhc3MoJ3dpbm5lcicpO1xuICAgICAgICAkKCcuY29udHJvbGxlcicpLmFkZENsYXNzKCdoaWRlJyk7XG4gICAgICAgICQoJy5wbGF5ZXJUd29XaW4nKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAkKCcucmVzZXQnKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICAgICAkKCcucmVzdWx0Qm94JykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuLy8gdGhpcyBmdW5jdGlvbiBkZXRlcm1pbmVzIHdob3MgdHVybiBpdCBpcyBhbmQgdXBkYXRlcyB0aGUgb24gc2NyZWVuIHBvcm1wdCBhY2NvcmRpbmdseSwgaXQgaXMgZmlyZWQgZGlyZWN0bHkgYWZ0ZXIgdGhlIGNsaWNrIGV2ZW50IG9uIG1vdmUsIGFuZCBpdCBmaXJlZCBpZiBhIGJvb3N0IGhhcHBlbnMgYWZ0ZXIgdXBkYXRpbmcgdGhlIGJvb3N0IGJvb2xlYW4sIGl0IHdvcmtzIG9uIHRoZSBvbmUgdmFyaWFibGUgd2hpY2ggZ2V0cyB1cGRhdGVkIG9mIHBsYXllck9uZVR1cm4gZnJvbSB0cnVlIHRvIGZhbHNlLlxuICBmdW5jdGlvbiBkZXRlcm1pbmVUdXJuKCl7XG4gICAgaWYocGxheWVyT25lVHVybil7XG4gICAgICBsb2NhdGVHYXJ5KCk7XG4gICAgICBwbGF5ZXJPbmVUdXJuID0gZmFsc2U7XG4gICAgICAkdHJhY2sgPSAkKCcudHJhY2syJyk7XG4gICAgICAkdHVyblRleHQudGV4dCgnUGxheWVyIDJcXCdzIFR1cm4nKTtcbiAgICB9IGVsc2UgaWYoIXBsYXllck9uZVR1cm4pe1xuICAgICAgbG9jYXRlR2FyeSgpO1xuICAgICAgcGxheWVyT25lVHVybiA9IHRydWU7XG4gICAgICAkdHJhY2sgPSAkKCcudHJhY2sxJyk7XG4gICAgICAkdHVyblRleHQudGV4dCgnUGxheWVyIDFcXCdzIFR1cm4nKTtcbiAgICB9XG4gIH1cblxuLy8gVGhpcyBmdW5jdGlvbiBsb2NhdGVzIGdhcnkgb24gdGhlIGJvYXJkLCB0aGUgc2VwZXJhdGUgcGFydHMgb2YgdGhlIGlmIGVsc2Ugc3RhdGVtZW50IHJ1biBiYXNlZCBvbiB3aGljaCBwbGF5ZXJzIHR1cm4gaXQgaXMsIG9uY2UgZG9pbmcgc28gaXQgZmlyZXMgb2ZmIHRoZSBtb3ZlR2FyeSBmdW5jdGlvbi4gT3IgaWYgaXQgZGV0ZWN0cyB0aGUgYm9vc3QgaGFzIGJlZW4gdXNlZChieSBpdCB1cGRhdGluZyBmcm9tIDEgdG8gMCBvbiB0aGUgYm9vc3QgYnV0dG9uIGNsaWNrKSBpZiBmaXJlcyBvZmYgdGhlIGJvb3N0R2FyeSBmdW5jdGlvbiBpbnN0ZWFkLCBpdCB0aGVuIHVwZGF0ZXMgdGhlIGJvb3N0IGNvdW50IHRvIDIgd2hpY2ggaW5mb3JtcyB0aGUgdXNlciB0aGUgYm9vc3QgaGFzIGJlZW4gdXNlZCB3aGVuIGNsaWNrZWQuXG4gIGZ1bmN0aW9uIGxvY2F0ZUdhcnkoKXtcbiAgICBpZihwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGluZGV4ID0gJCgnLnRyYWNrMS5wbGF5ZXInKS5pbmRleCgpO1xuICAgICAgaWYoUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPiAwKXtcbiAgICAgICAgbW92ZUdhcnkoKTtcbiAgICAgIH0gZWxzZSBpZihQbGF5ZXJPbmVCb29zdFJlbWFpbmluZyA9PT0gMCkge1xuICAgICAgICBib29zdEdhcnkoKTtcbiAgICAgICAgUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPSAyO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIXBsYXllck9uZVR1cm4pe1xuICAgICAgaW5kZXggPSAkKCcudHJhY2syLnBsYXllcicpLmluZGV4KCk7XG4gICAgICBpZihQbGF5ZXJUd29Cb29zdFJlbWFpbmluZyA+IDApe1xuICAgICAgICBtb3ZlR2FyeSgpO1xuICAgICAgfWVsc2UgaWYoUGxheWVyVHdvQm9vc3RSZW1haW5pbmcgPT09IDApIHtcbiAgICAgICAgYm9vc3RHYXJ5KCk7XG4gICAgICAgIFBsYXllclR3b0Jvb3N0UmVtYWluaW5nID0gMjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBUaGlzIGZ1bmN0aW9uIG1vdmVzIGdhcnksIGl0IGZpcnN0IGRldGVybWluZXMgaWYgaXQgaXMgYSByZWd1bGFyIG1vdmUgb3IgYSBib29zdCBtb3ZlLCBpZiBpdCBpcyBhIHJlZ3VsYXIgbW92ZSBpdCBtb3ZlcyB0aGUgY3VycmVudCBwbGF5ZXJzIEdhcnkgYmV0d2VlbiAxIGFuZCAzIGluZGV4IHNwYWNlcyBhbG9uZywgZmluYWxseSwgaXQgcnVucyB0aGUgY2hlY2tXaW5uZXIgZnVuY3Rpb24gdG8gc2VlIGlmIGEgd2luIGNvbmRpdGlvbiBoYXMgYmVlbiBtZXQuXG4gIGZ1bmN0aW9uIG1vdmVHYXJ5KCkge1xuICAgICR0cmFjay5lcShpbmRleCkucmVtb3ZlQ2xhc3MoJ3BsYXllcicpO1xuICAgICR0cmFjay5lcShpbmRleCArIChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzKSArIDEgKSApLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICBjaGVja1dpbm5lcigpO1xuICB9XG5cbi8vIFRoaXMgZnVuY3Rpb24gZmlyZXMgb2ZmIGlmIHRoZSBib29zdCBidXR0b24gaXMgY2xpY2tlZCBvbiwgdGhlIGNsaWNrIGV2ZW50IHVwZGF0ZXMgdGhlIGJvb3N0IGNvdW50IGFuZCB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuIHRoZSBsb2NhdGVHYXJ5IGlzIHJ1bm5pbmcuIEl0IGd1YXJlbnRlZXMgdGhlIHVzZXIgYSBtb3ZlIG9mIDUgc3BhY2VzIHRoZW4gcnVucyB0aGUgY2hlY2sgd2lubmVyIGZ1bmN0aW9uIHRvIHNlZSBpZiBhIHdpbiBjb25kaXRpb24gaGFzIGJlZW4gbWV0LlxuICBmdW5jdGlvbiBib29zdEdhcnkoKSB7XG4gICAgJHRyYWNrLmVxKGluZGV4KS5yZW1vdmVDbGFzcygncGxheWVyJyk7XG4gICAgJHRyYWNrLmVxKGluZGV4ICsgNSkuYWRkQ2xhc3MoJ3BsYXllcicpO1xuICAgIGNoZWNrV2lubmVyKCk7XG4gIH1cblxuLy8gdGhlIHNhbHRHYXJ5IGZ1bmN0aW9uLlxuICBmdW5jdGlvbiBzYWx0R2FyeSgpIHtcbiAgICBpZihQbGF5ZXJPbmVTYWx0UmVtYWluaW5nID09PSAwKXtcbiAgICAgIFBsYXllck9uZVNhbHRSZW1haW5pbmcgPSAyO1xuICAgICAgcGxheWVyT25lVHVybiA9IHRydWU7XG4gICAgICBpbmRleCA9ICQoJy50cmFjazEucGxheWVyJykuaW5kZXgoKTtcbiAgICAgICR0dXJuVGV4dC50ZXh0KCdQbGF5ZXIgMiBoYXMgYmVlbiBzYWx0ZWQhIFBsYXllciAxIG1vdmVzIGFnYWluIScpO1xuICAgICAgbW92ZUdhcnkoKTtcbiAgICB9IGVsc2UgaWYoUGxheWVyVHdvU2FsdFJlbWFpbmluZyA9PT0gMCl7XG4gICAgICBQbGF5ZXJUd29TYWx0UmVtYWluaW5nID0gMjtcbiAgICAgIC8vIHBsYXllck9uZVR1cm4gPSBmYWxzZTtcbiAgICAgICR0dXJuVGV4dC50ZXh0KCdQbGF5ZXIgMSBoYXMgYmVlbiBzYWx0ZWQhIFBsYXllciAyIG1vdmVzIGFnYWluIScpO1xuICAgICAgaW5kZXggPSAkKCcudHJhY2syLnBsYXllcicpLmluZGV4KCk7XG4gICAgICBtb3ZlR2FyeSgpO1xuICAgIH1cbiAgfVxuLy8gdmFyaW91cyBldmVudCBsaXN0ZW5lcnMgYmVsb3cuXG5cbi8vIFRoaXMgaXMgdGhlIGNsaWNrIGV2ZW50IGZvciB0aGUgbW92ZSBidXR0b24sIHdoZW4gY2xpY2tlZCBpdCBmaXJlcyBvZmYgdGhlIGRldGVybWluZVR1cm4gZnVuY3Rpb24gd2hpY2ggc2V0cyBpbiBtb3Rpb24gdGhlIGxvY2F0ZUdhcnkgYW5kIG1vdmVHYXJ5IGZ1bmN0aW9ucy5cbiAgJG1vdmUub24oJ2NsaWNrJywgZGV0ZXJtaW5lVHVybik7XG5cbi8vIHRoaXMgaXMgdGhlIGNsaWNrIGV2ZW50IGZvciB0aGUgYm9vc3QgYnV0dG9uLCB3aGVuIGNsaWNrZWQgaXQgY2hlY2tzIGZpcnN0IHRvIHNlZSBpZiB0aGUgcGxheWVyIGhhcyBhbHJlYWR5IHVzZWQgdGhlaXIgYm9vc3QsIGlmIG5vdCBpdCB1cGRhdGVzIHRoYXQgaW5mb3JtYXRpb24gYW5kIHJ1bnMgdGhlIGRldGVybWluZVR1cm4gZnVuY3Rpb24gbGlrZSBhIG5vcm1hbCBtb3ZlLCB3aGVuIHRoaXMgcmVhY2hlcyB0aGUgbG9jYXRlR2FyeSBmdW5jdGlvbiwgaXQgdGFrZXMgbm90ZSB0aGF0IHRoZSBib29zdCBoYXMgYmVlbiB1c2VkIHRvIGZpcmUgb2ZmIHRoZSBib29zdEdhcnkgZnVuY3Rpb24gaW5zdGVhZCBvZiB0aGUgbW92ZUdhcnkgZnVuY3Rpb24uIEl0IHRoZW4gdXBkYXRlcyB0aGUgYm9vc3QgcmVtYWluaW5nIGFnYWluLCBzbyB0aGF0IGlmIGFub3RoZXIgYm9vc3QgaXMgYXR0ZW1wdGVkLCBpdCBpbmZvcm1zIHRoZSB1c2VyIHRoYXQgdGhlaXIgYm9vc3QgaGFzIGFscmVhZHkgYmVlbiB1c2VkLlxuICAkYm9vc3Qub24oJ2NsaWNrJywgKCkgPT4ge1xuICAgIGlmKHBsYXllck9uZVR1cm4pe1xuICAgICAgaWYoUGxheWVyT25lQm9vc3RSZW1haW5pbmcgPT09IDEpe1xuICAgICAgICAkYm9vc3RTb3VuZC5wbGF5KCk7XG4gICAgICAgIFBsYXllck9uZUJvb3N0UmVtYWluaW5nID0gMDtcbiAgICAgICAgZGV0ZXJtaW5lVHVybigpO1xuICAgICAgfSBlbHNlIGlmKFBsYXllck9uZUJvb3N0UmVtYWluaW5nID09PSAyKXtcbiAgICAgICAgJHR1cm5UZXh0LnRleHQoJ1BsYXllciAxIGJvb3N0IGFscmVhZHkgdXNlZCEnKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCFwbGF5ZXJPbmVUdXJuKXtcbiAgICAgIGlmKFBsYXllclR3b0Jvb3N0UmVtYWluaW5nID09PSAxKXtcbiAgICAgICAgJGJvb3N0U291bmQucGxheSgpO1xuICAgICAgICBQbGF5ZXJUd29Cb29zdFJlbWFpbmluZyA9IDA7XG4gICAgICAgIGRldGVybWluZVR1cm4oKTtcbiAgICAgIH0gZWxzZSBpZihQbGF5ZXJUd29Cb29zdFJlbWFpbmluZyA9PT0gMil7XG4gICAgICAgICR0dXJuVGV4dC50ZXh0KCdQbGF5ZXIgMiBib29zdCBhbHJlYWR5IHVzZWQhJyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICAvLyBiZWxvdyBpcyB0aGUgZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBzYWx0IGFiaWxpdHkuIFVzaW5nIHRoaXMgd2lsbCBzdG9wIHlvdXIgb3Bwb25lbnRzIG5leHQgdHVybiBhbmQgZ2l2ZSBnYXJ5IGEgbm9ybWFsIGdhcnlNb3ZlIHdoaWxlIHVzaW5nIGl0LiBJZiBhIHBsYXllciBoYXMgYWxyZWFkeSB1c2VkIHRoZWlyIHNhbHQgaXQgaW5mb3JtcyB0aGVtIG9uIHRoZSAkdHVyblRleHQgZmVlZGJhY2suXG4gICRzYWx0Lm9uKCdjbGljaycsKCkgPT4ge1xuICAgIGlmKHBsYXllck9uZVR1cm4pe1xuICAgICAgaWYoUGxheWVyT25lU2FsdFJlbWFpbmluZyA9PT0gMSl7XG4gICAgICAgICRzYWx0U291bmQucGxheSgpO1xuICAgICAgICBQbGF5ZXJPbmVTYWx0UmVtYWluaW5nID0gMDtcbiAgICAgICAgc2FsdEdhcnkoKTtcbiAgICAgIH0gZWxzZSBpZihQbGF5ZXJPbmVTYWx0UmVtYWluaW5nID09PSAyKXtcbiAgICAgICAgJHR1cm5UZXh0LnRleHQoJ1BsYXllciAxIGhhcyBhbHJlYWR5IHVzZWQgU2FsdCEnKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYoIXBsYXllck9uZVR1cm4pe1xuICAgICAgaWYoUGxheWVyVHdvU2FsdFJlbWFpbmluZyA9PT0gMSl7XG4gICAgICAgICRzYWx0U291bmQucGxheSgpO1xuICAgICAgICBQbGF5ZXJUd29TYWx0UmVtYWluaW5nID0gMDtcbiAgICAgICAgc2FsdEdhcnkoKTtcbiAgICAgIH0gZWxzZSBpZihQbGF5ZXJUd29TYWx0UmVtYWluaW5nID09PSAyKXtcbiAgICAgICAgJHR1cm5UZXh0LnRleHQoJ1BsYXllciAyIGhhcyBhbHJlYWR5IHVzZWQgU2FsdCEnKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIC8vIENsaWNrIGV2ZW50IHRvIHN0YXJ0IHRoZSBnYW1lLCByZW1vdmVzIHRoZSBpbnN0cnVjdGlvbiBwYWdlIGFuZCB0aGVuIHNob3dzIHRoZSByYWNldHJhY2ssIGZlZWRiYWNrIGJveCBhbmQgY29udHJvbGxlci5cblxuICAkc3RhcnQub24oJ2NsaWNrJywgKCkgPT4ge1xuICAgICQoJy5pbnN0cnVjdGlvbnMnKS5hZGRDbGFzcygnaGlkZScpO1xuICAgICQoJy5ib2FyZCcpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgJCgnLmNvbnRyb2xsZXInKS5yZW1vdmVDbGFzcygnaGlkZScpO1xuICAgICQoJy5mZWVkYmFjaycpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgJGF1ZGlvVGhlbWUucGxheSgpO1xuICB9KTtcblxuICAvLyBFdmVudCBsaXN0ZW5lciBmb3IgdGhlIHJlc2V0IGJ1dHRvbiwgaXQgYmFzaWNhbGx5IGhpZGVzIGFsbCBvZiB0aGUgZmVlZGJhY2sgZnJvbSB0aGUgcmVtYWluaW5nIGdhbWUgYW5kIG1vdmVzIGJvdGggcGxheWVyIGljb25zIGJhY2sgdG8gdGhlIHN0YXJ0IGxpbmUsIGl0IGFsc28gcmVzZXRzIHRoZSBzYWx0IGFuZCBib29zdCBjb3VudGVycyB0byAxIHNvIHRoYXQgdGhleSBjYW4gbm93IGJlIHVzZWQgYWdhaW4uXG5cbiAgJCgnLnJlc2V0Jykub24oJ2NsaWNrJywoKSA9PiB7XG4gICAgJCgnLnRyYWNrMScpLnJlbW92ZUNsYXNzKCdwbGF5ZXIgd2lubmVyJyk7XG4gICAgJCgnLnN0YXJ0MScpLmFkZENsYXNzKCdwbGF5ZXInKTtcbiAgICBQbGF5ZXJPbmVCb29zdFJlbWFpbmluZyA9IDE7XG4gICAgUGxheWVyT25lU2FsdFJlbWFpbmluZyA9MTtcbiAgICAkKCcudHJhY2syJykucmVtb3ZlQ2xhc3MoJ3BsYXllciB3aW5uZXInKTtcbiAgICAkKCcuc3RhcnQyJykuYWRkQ2xhc3MoJ3BsYXllcicpO1xuICAgIFBsYXllclR3b0Jvb3N0UmVtYWluaW5nID0gMTtcbiAgICBQbGF5ZXJUd29TYWx0UmVtYWluaW5nID0gMTtcbiAgICAkKCcuY29udHJvbGxlcicpLnJlbW92ZUNsYXNzKCdoaWRlJyk7XG4gICAgJCgnLmZlZWRiYWNrJykucmVtb3ZlQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcucmVzdWx0Qm94JykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcucGxheWVyT25lV2luJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgICAkKCcucGxheWVyVHdvV2luJykuYWRkQ2xhc3MoJ2hpZGUnKTtcbiAgfSk7XG59KTtcbiJdfQ==
